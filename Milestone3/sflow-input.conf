input {
        pipe {
                type => "sflow"
                command => "/usr/local/bin/sflowtool_wrapper.sh -l -p 6343"
        }
}

filter {

    if [type] == "sflow" {

        if [message] =~ /CNTR/ {
            drop { }
        }

        grok {
            match => { "message" => "%{WORD:SampleType},%{IP:ReporterIP},%{NUMBER:inputPort},%{NUMBER:outputPort},%{WORD:srcMAC},%{WORD:dstMAC},%{WORD:EtherType},%{NUMBER:in_vlan},%{NUMBER:out_vlan},%{IP:srcIP},%{IP:dstIP},%{NUMBER:IPProtocol},%{WORD:IPTOS},%{WORD:IPTTL},%{NUMBER:srcPort},%{NUMBER:dstPort},%{DATA:tcpFlags},%{NUMBER:PacketSize},%{NUMBER:IPSize},%{NUMBER:SampleRate}" }
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }

	mutate {
            remove_field => [ "host", "command", "IPTTL", "IPSize", "message", "SampleType", "out_vlan", "tcpFlags"]
        }
	
	geoip {
                source => "srcIP"
                target => "srcAS"
		fields => "autonomous_system_number"
                database => "/etc/logstash/dictionaries/GeoLite2-ASN_20170718/GeoLite2-ASN.mmdb"
        }
        geoip {
                source => "dstIP"
                target => "dstAS"
		fields => "autonomous_system_number"
                database => "/etc/logstash/dictionaries/GeoLite2-ASN_20170718/GeoLite2-ASN.mmdb"
        }
    }
}

output {
        elasticsearch {
               hosts => ["localhost:9200"]
               index => "sflow-%{+YYYY.MM.dd}"
               template => "/etc/logstash/sflow-elasticsearch-mapping.json"
	       template_overwrite => true
	}
}